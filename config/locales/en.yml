en:
  activerecord:
    ancestors:
      mdm/service:
        search:
          operator:
            names:
              info:
                help: 'A banner grab containing information about the service.'
              name:
                help: "The name of the service application, like 'ssh' or 'vnc'."
              proto:
                help: "The protocol for the service, like 'tcp' or 'udp'."
              port:
                help: "The port this service runs on."
      mdm/host:
        search:
          operator:
            names:
              name:
                help: "The hostname associated with this host."
              address:
                help: "The IPv4 or IPv6 associated with this host"
              os_flavor:
                help: "The OS flavor running on this host."
              os_sp:
                help: "The OS service pack running on this host."
              os:
                help: "The OS running on this host."
              os:
                help: "The OS running on this host."
      mdm/tag:
        search:
          operator:
            names:
              name:
                help: "The name of the tag."
              desc:
                help: "The description of the tag."
  metasploit:
    model:
      errors:
        messages:
          # have to duplicate activerecord.model.errors.message.taken because of the different i18n_scope
          taken: "has already been taken"
        models:
          metasploit_data_models/ip_address/range:
            attributes:
              value:
                order: "beginning of range (%{begin}) cannot be after end of range (%{end})"
          metasploit_data_models/ip_address/v4/segmented:
            attributes:
              segments:
                segment_invalid: "has invalid segment (%{segment}) at index %{index}"
                wrong_length: "is the wrong length (should be %{count} segments)"
          metasploit_data_models/ip_address/v4/segment/nmap/list:
            attributes:
              value:
                array: "is not an Array"
                element: "has invalid element (%{element}) at index %{index}"
          metasploit_data_models/ip_address/v4/segment/nmap/range:
            attributes:
              value:
                order: "beginning of range (%{begin}) cannot be after end of range (%{end})"
          metasploit_data_models/search/operation/ip_address/invalid_range:
            attributes:
              value:
                format: "does not match any known formats (IPv4, IPv4 CIDR, IPv4 NMAP, IPv4 Range, IPv6, IPv6 CIDR, IPv6 Range)"
          metasploit_data_models/search/operation/ip_address/v4/range:
            attributes:
              value:
                extreme: "%{extreme} (%{extreme_value}) is not an IPAddr"
                order: "beginning of range (%{begin}) cannot be after end of range (%{end})"
                type: "is not a range"
          metasploit_data_models/search/operation/ip_address/v4/single:
            attributes:
              value:
                format: "does not match IPv4 dotted decimal format"
          metasploit_data_models/search/operation/port/range:
            attributes:
              value:
                port_range_extreme_inclusion: "has extreme (%{extreme}) value (%{extreme_value}) outside range (%{minimum}-%{maximum})."
                port_range_extreme_not_an_integer: "has extreme (%{extreme}) value (%{extreme_value}) that is not an integer."
          metasploit_data_models/search/operation/range:
            attributes:
              value:
                order: "is not in order: begin (%{begin} is greater than end (%{end})."
                range: "is not a range"
          metasploit_data_models/search/operator/multitext:
            attributes:
              operator_names:
                too_short: "is too short (minimum is %{count} operator names)"
