class MetasploitDataModels::AutomaticExploitation::MatchResult < ActiveRecord::Base
  attr_accessible :match_id, :run_id, :state

  # Match results are in one of two states:
  #  - "succeeded" (exploit gained access)
  #  - "failed" (exploit did NOT gain access)
  VALID_STATES = ["succeeded", "failed"]

  #
  # ASSOCIATIONS
  #

  belongs_to :match,
             class_name: 'MetasploitDataModels::AutomaticExploitation::Match',
             dependent: :destroy

  belongs_to :run,
             class_name: 'MetasploitDataModels::AutomaticExploitation::Run'

  #
  # VALIDATIONS
  #

  # must be present and one of allowable values
  validates :state,
            presence: true,
            inclusion: VALID_STATES

  #
  # SCOPES
  #
  scope :succeeded, lambda { where(state:"succeeded") }
  scope :failed, lambda { where(state:"failed") }

  Metasploit::Concern.run(self)
end
